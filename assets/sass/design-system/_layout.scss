/*$img-width-xl: 100%;
$img-width-lg: 40rem;       //640px
$img-width-md: 25rem;       //400px
$img-width-sm: 18.5rem;     //296px*/
/*
.img-width- {
    &full {
        max-width: $img-width-xl;
    }
    
    &lg {
        max-width: $img-width-lg;
    }
    
    &md {
        max-width: $img-width-md;
    }
    
    &sm {
        max-width: $img-width-sm;
    }
}
*/

.two-col-new {
    
}

.two-col-icon {
    display: flex;
    align-items: center;
    gap: 1rem;
    
    figure {
        width: 7.5rem;
        flex-shrink: 0;
    }
}


/* On smaller screens we still stack everything */
.two-col {
    @include do-space(margin-top, lg); 
    @include do-space(margin-bottom, lg); 
    
    /* remove margins expect for a small one at the bottom */
    figure {
        margin: 0 0 0.5rem 0;
    }
    
    figure.xs {
        width: 10rem;
        margin: 0 auto;
    }
    
    /* no margin or border */
    figcaption {
        padding: 0;
        border: 0;
    }
    
    /* small margin for headings in this context */
    h2, h3, h4, h5, h6 {
        margin-top: 1rem;
    }
    
    /* START small screen sizes */
    /* At screen widths greater then 576px, swap to two column */
    @include media-breakpoint-up(sm) {  
        display: flex;
        
        /* Vertically align items */
        align-items: center;
        gap: 1rem;
        
        /* flex this to exploit ordering */
        .content {
            /* Content to the right */
            order: 1;
            display: flex;
            gap: 1rem;
            flex-direction: column;
        }
        
        /* remove margins as collapsible margins don't work in flex :( */
        * {
            margin: 0 !important;
        }
        
        
        figure {
            /* Figure to the right */
            order: 2;
            margin: 0;
            
            width: 17.5rem;
            flex-shrink: 0;
        }
        
        
        /* Once we aren't stacking everything, photo caption comes last */
        figcaption {
            order: 100;
        }        
    }
    /* END small screen sizes */
    
    @include media-breakpoint-up(lg) {  
        gap: 1.5rem;
    }
}

/* Customisation options */
.align-top {
    align-items: flex-start;
}

/* Swap image and content around, image is on the left */
.img-left {
    figure {
        order: 1;
    }
    .content {
        order: 2;
    }
}

.my-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    
    @include media-breakpoint-up(sm) { 
        grid-template-columns: 1fr 1fr 1fr; 
    }
    
    @include media-breakpoint-up(lg) { 
        gap: 1.5rem;
        grid-template-columns: 1fr 1fr 1fr 1fr; 
    }
}

// Striped list 
// Mirrors functionality of a striped table
.striped-list {
	
	padding: 0;
	
	li {
		list-style-type: none;
		padding: 0.75rem 0.5rem;
		margin: 0;
	}
	
	//Alternate grey and white
	li:nth-child(odd) {
		background-color: $underlay-grey;
	}

	//adjust padding on larger screens
	@include media-breakpoint-up(md) { 
		
		li {
			padding: 0.75rem 1rem; 
		}
	}
}

//For larger screens, set up classes to do multi column lists, preserving the alternating background
@include media-breakpoint-up(md) { 
	
	.striped-list-col-2 {
		display: grid;
    	grid-template-columns: 1fr 1fr;
		
		//select the first and second items of every set of four items, apply a light grey bg
		li:nth-child(4n+1),
		li:nth-child(4n+2) {
		  background-color: $underlay-grey;
		}
		
		//select the third and second items of every set of four items, apply a white bg
		li:nth-child(4n+3),
		li:nth-child(4n+4) {
		  background-color: $white;
		}
		
		// span across both columns if the number of items is odd
		li:last-child:nth-child(odd) {
		  grid-column: span 2;
		}
			
	}
	
	.striped-list-col-3 {
		display: grid;
    	grid-template-columns: 1fr 1fr 1fr;
		
		li:nth-child(6n+1),
		li:nth-child(6n+2),
		li:nth-child(6n+3) {
		  background-color: $underlay-grey;
		}

		li:nth-child(6n+4),
		li:nth-child(6n+5),
		li:nth-child(6n+6) {
		  background-color: $white
		}
		
		//span last item all columns if the there's one item on last row
		li:nth-last-child(1):nth-child(3n+1) {
			grid-column: span 3;
		}
		
		//span last item across two columns if the there's two items on last row
		li:nth-last-child(1):nth-child(3n+2) {
			grid-column: span 2;
		}
	}
	
	
	.striped-list-col-4 {
		display: grid;
    	grid-template-columns: 1fr 1fr 1fr 1fr;
		
		li:nth-child(8n+1),
		li:nth-child(8n+2),
		li:nth-child(8n+3),
		li:nth-child(8n+4) {
		  background-color: $underlay-grey;
		}

		li:nth-child(8n+5),
		li:nth-child(8n+6),
		li:nth-child(8n+7),
		li:nth-child(8n+8){
		  background-color: $white
		}
		
		//span last item all columns if the there's one item on last row
		li:nth-last-child(1):nth-child(4n+1) {
			grid-column: span 4;
		}
		
		//span last item all columns if the there's two items on last row
		li:nth-last-child(1):nth-child(4n+2) {
			grid-column: span 3;
		}
		
		//span last item all columns if the there's three items on last row
		li:nth-last-child(1):nth-child(4n+3) {
			grid-column: span 2;
		}
	}
}